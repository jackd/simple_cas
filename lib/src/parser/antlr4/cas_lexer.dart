// Generated from Cas.g4 by antlr4dart

part of cas.parser.antlr;

class CasLexer extends Lexer {
  static const int T__0 = 1,
      COND = 2,
      SIN = 3,
      COS = 4,
      TAN = 5,
      EXP = 6,
      LN = 7,
      LOG = 8,
      ID = 9,
      INT = 10,
      FLOAT = 11,
      NEWLINE = 12,
      WS = 13,
      MUL = 14,
      DIV = 15,
      ADD = 16,
      SUB = 17,
      POW = 18,
      BL = 19,
      BR = 20;

  static const String _serializedAtn = "\x03\u0430\ud6d1\u8206\uad2d\u4417"
      "\uaef1\u8d80\uaadd\x02\x16\x86\x08\x01\x04\x02\x09\x02\x04\x03\x09\x03"
      "\x04\x04\x09\x04\x04\x05\x09\x05\x04\x06\x09\x06\x04\x07\x09\x07\x04"
      "\x08\x09\x08\x04\x09\x09\x09\x04\x0a\x09\x0a\x04\x0b\x09\x0b\x04\x0c"
      "\x09\x0c\x04\x0d\x09\x0d\x04\x0e\x09\x0e\x04\x0f\x09\x0f\x04\x10\x09"
      "\x10\x04\x11\x09\x11\x04\x12\x09\x12\x04\x13\x09\x13\x04\x14\x09\x14"
      "\x04\x15\x09\x15\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03"
      "\x03\x03\x03\x05\x03\x34\x0a\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03"
      "\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07"
      "\x03\x07\x03\x07\x03\x07\x03\x08\x03\x08\x03\x08\x03\x09\x03\x09\x03"
      "\x09\x03\x09\x03\x0a\x03\x0a\x03\x0b\x06\x0b\x50\x0a\x0b\x0d\x0b\x0e"
      "\x0b\x51\x03\x0c\x07\x0c\x55\x0a\x0c\x0c\x0c\x0e\x0c\x58\x0b\x0c\x03"
      "\x0c\x05\x0c\x5b\x0a\x0c\x03\x0c\x06\x0c\x5e\x0a\x0c\x0d\x0c\x0e\x0c"
      "\x5f\x03\x0c\x03\x0c\x05\x0c\x64\x0a\x0c\x03\x0c\x06\x0c\x67\x0a\x0c"
      "\x0d\x0c\x0e\x0c\x68\x05\x0c\x6b\x0a\x0c\x03\x0d\x05\x0d\x6e\x0a\x0d"
      "\x03\x0d\x03\x0d\x03\x0e\x06\x0e\x73\x0a\x0e\x0d\x0e\x0e\x0e\x74\x03"
      "\x0e\x03\x0e\x03\x0f\x03\x0f\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12"
      "\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x02\x02\x16"
      "\x03\x03\x05\x04\x07\x05\x09\x06\x0b\x07\x0d\x08\x0f\x09\x11\x0a\x13"
      "\x0b\x15\x0c\x17\x0d\x19\x0e\x1b\x0f\x1d\x10\x1f\x11\x21\x12\x23\x13"
      "\x25\x14\x27\x15\x29\x16\x03\x02\x08\x04\x02\x3e\x3e\x40\x40\x04\x02"
      "\x43\x5c\x63\x7c\x03\x02\x32\x3b\x04\x02\x47\x47\x67\x67\x04\x02\x2d"
      "\x2d\x2f\x2f\x04\x02\x0b\x0b\x22\x22\x91\x02\x03\x03\x02\x02\x02\x02"
      "\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\x09\x03\x02\x02\x02"
      "\x02\x0b\x03\x02\x02\x02\x02\x0d\x03\x02\x02\x02\x02\x0f\x03\x02\x02"
      "\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02"
      "\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1b\x03"
      "\x02\x02\x02\x02\x1d\x03\x02\x02\x02\x02\x1f\x03\x02\x02\x02\x02\x21"
      "\x03\x02\x02\x02\x02\x23\x03\x02\x02\x02\x02\x25\x03\x02\x02\x02\x02"
      "\x27\x03\x02\x02\x02\x02\x29\x03\x02\x02\x02\x03\x2b\x03\x02\x02\x02"
      "\x05\x33\x03\x02\x02\x02\x07\x35\x03\x02\x02\x02\x09\x39\x03\x02\x02"
      "\x02\x0b\x3d\x03\x02\x02\x02\x0d\x41\x03\x02\x02\x02\x0f\x45\x03\x02"
      "\x02\x02\x11\x48\x03\x02\x02\x02\x13\x4c\x03\x02\x02\x02\x15\x4f\x03"
      "\x02\x02\x02\x17\x56\x03\x02\x02\x02\x19\x6d\x03\x02\x02\x02\x1b\x72"
      "\x03\x02\x02\x02\x1d\x78\x03\x02\x02\x02\x1f\x7a\x03\x02\x02\x02\x21"
      "\x7c\x03\x02\x02\x02\x23\x7e\x03\x02\x02\x02\x25\x80\x03\x02\x02\x02"
      "\x27\x82\x03\x02\x02\x02\x29\x84\x03\x02\x02\x02\x2b\x2c\x07\x2e\x02"
      "\x02\x2c\x04\x03\x02\x02\x02\x2d\x34\x07\x3f\x02\x02\x2e\x2f\x07\x40"
      "\x02\x02\x2f\x34\x07\x3f\x02\x02\x30\x31\x07\x3e\x02\x02\x31\x34\x07"
      "\x3f\x02\x02\x32\x34\x09\x02\x02\x02\x33\x2d\x03\x02\x02\x02\x33\x2e"
      "\x03\x02\x02\x02\x33\x30\x03\x02\x02\x02\x33\x32\x03\x02\x02\x02\x34"
      "\x06\x03\x02\x02\x02\x35\x36\x07\x75\x02\x02\x36\x37\x07\x6b\x02\x02"
      "\x37\x38\x07\x70\x02\x02\x38\x08\x03\x02\x02\x02\x39\x3a\x07\x65\x02"
      "\x02\x3a\x3b\x07\x71\x02\x02\x3b\x3c\x07\x75\x02\x02\x3c\x0a\x03\x02"
      "\x02\x02\x3d\x3e\x07\x76\x02\x02\x3e\x3f\x07\x63\x02\x02\x3f\x40\x07"
      "\x70\x02\x02\x40\x0c\x03\x02\x02\x02\x41\x42\x07\x67\x02\x02\x42\x43"
      "\x07\x7a\x02\x02\x43\x44\x07\x72\x02\x02\x44\x0e\x03\x02\x02\x02\x45"
      "\x46\x07\x6e\x02\x02\x46\x47\x07\x70\x02\x02\x47\x10\x03\x02\x02\x02"
      "\x48\x49\x07\x6e\x02\x02\x49\x4a\x07\x71\x02\x02\x4a\x4b\x07\x69\x02"
      "\x02\x4b\x12\x03\x02\x02\x02\x4c\x4d\x09\x03\x02\x02\x4d\x14\x03\x02"
      "\x02\x02\x4e\x50\x09\x04\x02\x02\x4f\x4e\x03\x02\x02\x02\x50\x51\x03"
      "\x02\x02\x02\x51\x4f\x03\x02\x02\x02\x51\x52\x03\x02\x02\x02\x52\x16"
      "\x03\x02\x02\x02\x53\x55\x09\x04\x02\x02\x54\x53\x03\x02\x02\x02\x55"
      "\x58\x03\x02\x02\x02\x56\x54\x03\x02\x02\x02\x56\x57\x03\x02\x02\x02"
      "\x57\x5a\x03\x02\x02\x02\x58\x56\x03\x02\x02\x02\x59\x5b\x07\x30\x02"
      "\x02\x5a\x59\x03\x02\x02\x02\x5a\x5b\x03\x02\x02\x02\x5b\x5d\x03\x02"
      "\x02\x02\x5c\x5e\x09\x04\x02\x02\x5d\x5c\x03\x02\x02\x02\x5e\x5f\x03"
      "\x02\x02\x02\x5f\x5d\x03\x02\x02\x02\x5f\x60\x03\x02\x02\x02\x60\x6a"
      "\x03\x02\x02\x02\x61\x63\x09\x05\x02\x02\x62\x64\x09\x06\x02\x02\x63"
      "\x62\x03\x02\x02\x02\x63\x64\x03\x02\x02\x02\x64\x66\x03\x02\x02\x02"
      "\x65\x67\x09\x04\x02\x02\x66\x65\x03\x02\x02\x02\x67\x68\x03\x02\x02"
      "\x02\x68\x66\x03\x02\x02\x02\x68\x69\x03\x02\x02\x02\x69\x6b\x03\x02"
      "\x02\x02\x6a\x61\x03\x02\x02\x02\x6a\x6b\x03\x02\x02\x02\x6b\x18\x03"
      "\x02\x02\x02\x6c\x6e\x07\x0f\x02\x02\x6d\x6c\x03\x02\x02\x02\x6d\x6e"
      "\x03\x02\x02\x02\x6e\x6f\x03\x02\x02\x02\x6f\x70\x07\x0c\x02\x02\x70"
      "\x1a\x03\x02\x02\x02\x71\x73\x09\x07\x02\x02\x72\x71\x03\x02\x02\x02"
      "\x73\x74\x03\x02\x02\x02\x74\x72\x03\x02\x02\x02\x74\x75\x03\x02\x02"
      "\x02\x75\x76\x03\x02\x02\x02\x76\x77\x08\x0e\x02\x02\x77\x1c\x03\x02"
      "\x02\x02\x78\x79\x07\x2c\x02\x02\x79\x1e\x03\x02\x02\x02\x7a\x7b\x07"
      "\x31\x02\x02\x7b\x20\x03\x02\x02\x02\x7c\x7d\x07\x2d\x02\x02\x7d\x22"
      "\x03\x02\x02\x02\x7e\x7f\x07\x2f\x02\x02\x7f\x24\x03\x02\x02\x02\x80"
      "\x81\x07\x60\x02\x02\x81\x26\x03\x02\x02\x02\x82\x83\x07\x2a\x02\x02"
      "\x83\x28\x03\x02\x02\x02\x84\x85\x07\x2b\x02\x02\x85\x2a\x03\x02\x02"
      "\x02\x0d\x02\x33\x51\x56\x5a\x5f\x63\x68\x6a\x6d\x74\x03\x08\x02\x02";

  final Atn atn = AtnSimulator.deserialize(_serializedAtn);

  final sharedContextCache = new PredictionContextCache();

  final List<String> modeNames = ["DEFAULT_MODE"];

  final List<String> tokenNames = [
    "'\\u0000'",
    "'\\u0001'",
    "'\\u0002'",
    "'\\u0003'",
    "'\\u0004'",
    "'\\u0005'",
    "'\\u0006'",
    "'\\u0007'",
    "'\b'",
    "'\t'",
    "'\n'",
    "'\\u000B'",
    "'\f'",
    "'\r'",
    "'\\u000E'",
    "'\\u000F'",
    "'\\u0010'",
    "'\\u0011'",
    "'\\u0012'",
    "'\\u0013'",
    "'\\u0014'"
  ];

  final List<String> ruleNames = [
    "T__0",
    "COND",
    "SIN",
    "COS",
    "TAN",
    "EXP",
    "LN",
    "LOG",
    "ID",
    "INT",
    "FLOAT",
    "NEWLINE",
    "WS",
    "MUL",
    "DIV",
    "ADD",
    "SUB",
    "POW",
    "BL",
    "BR"
  ];

  CasLexer(StringSource input) : super(input) {
    var _decisionToDfa = new List<Dfa>(atn.numberOfDecisions);
    for (int i = 0; i < atn.numberOfDecisions; i++) {
      _decisionToDfa[i] = new Dfa(atn.getDecisionState(i), i);
    }
    interpreter =
        new LexerAtnSimulator(atn, _decisionToDfa, sharedContextCache, this);
  }

  String get serializedAtn => _serializedAtn;

  String get grammarFileName => "Cas.g4";
}
